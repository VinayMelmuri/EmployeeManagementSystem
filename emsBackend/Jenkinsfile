pipeline {
    agent any
    
    environment {
        // You can define environment variables here, like database credentials
        DB_URL = 'jdbc:mysql://localhost:3306/your_database'
        DB_USERNAME = 'ems'
        DB_PASSWORD = 'Betelnut@999'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from Git
                git branch: 'main', url: 'https://github.com/VinayMelmuri/EmployeeManagementSystem.git'
            }
        }

        stage('Build') {
            steps {
                // Clean and build the application using Maven
                bat 'mvn clean install'
            }
        }

        stage('Liquibase Update') {
            steps {
                // Run Liquibase to apply database migrations
                bat 'mvn liquibase:update'
            }
        }


        stage('Package') {
            steps {
                // Package the application if necessary (e.g., create a JAR or WAR file)
                bat 'mvn package'
            }
        }
        
        

        stage('Push Changes to GitHub') {
            steps {
                script {
                    def user = "VinayMelmuri"
                    def email = "vinaymelmuri@gmail.com"
                    
                    bat """
                    git config --global user.name '${user}'
                    git config --global user.email '${email}'
                    git add .
                    git commit -m "Automated update from Jenkins pipeline"
                    git push https://github.com/VinayMelmuri/EmployeeManagementSystem.git
                    """
                }
            }
        }      


    }

    post {
    
    	always {
            // Clean up workspace after job execution
            cleanWs()
            
        }
        success {
            // Actions to perform if the pipeline succeeds
            echo 'Pipeline completed successfully!'
        }
        failure {
            // Actions to perform if the pipeline fails
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}
